# Open file    
fileHandler  =  open  ("/home/ey/personal/program/MoE/huggingface/transformers/examples/research_projects/switch-base-generation/paperplot/dit.8.txt",  "r")
# Get list of all lines in file
listOfLines  =  fileHandler.readlines()
# Close file
fileHandler.close()
# Iterate over the lines
loadIOTs = []
encoderTs = []
decoderTs = []
decoderLenTs = []
for  line in  listOfLines:
	# print(line.strip())
	str_ = line.strip()
	if len(str_):
		str_list = str_.split(" ")
		if str_list[0] == "load=":
			loadIOTs.append(float(str_list[1]))
		elif str_list[0] == "encoder=":
			encoderTs.append(float(str_list[1]))
		elif str_list[0] == "decoder=":
			decoderTs.append(float(str_list[1]))
		elif str_list[0] == "el":
			decoderLenTs.append(int(str_list[2]))
decoderAllTs = []
decoderComTs = []
AllTs = []
for i in range(len(decoderLenTs)):
	decoderAllTs.append(decoderTs[i]*decoderLenTs[i])
	decoderComTs.append(decoderTs[i] - loadIOTs[i])
	AllTs.append(decoderTs[i]*decoderLenTs[i]+encoderTs[i])
			
# print(len(encoderTs), encoderTs)
# # print(len(decoderLenTs), decoderLenTs)
# # print(len(decoderTs), decoderTs)
# print(len(AllTs), AllTs)

# print(len(encoderTs), encoderTs)
# # print(len(decoderLenTs), decoderLenTs)
# # print(len(decoderTs), decoderTs)
# print(len(AllTs), AllTs)
print("encoder:",  sum(encoderTs)/len(encoderTs))
print("encoder+decoder:", sum(AllTs)/len(AllTs), "[", min(AllTs),"~",max(AllTs),"]")


# print(len(loadIOTs), loadIOTs)
# print(len(decoderComTs), decoderComTs)
print("I/O:",  sum(loadIOTs)/len(loadIOTs))
print("~compute:", sum(decoderComTs)/len(decoderComTs))
print("I/O+compute:", sum(decoderComTs)/len(decoderComTs)+sum(loadIOTs)/len(loadIOTs))


# SupTimes= [[1690362772.3494415, 1690362772.804422], [1690362773.0775611, 1690362773.2327895], [1690362773.5394049, 1690362773.6801095], [1690362773.685272, 1690362773.842674], [1690362773.8759844, 1690362774.0261874], [1690362774.0323071, 1690362774.219399], [1690362775.0812056, 1690362775.270964], [1690362775.2839785, 1690362775.5312994], [1690362775.561479, 1690362775.721238], [1690362775.7261748, 1690362776.0018039], [1690362776.5501635, 1690362776.972457], [1690362777.0277758, 1690362777.580618]]
# # SupTimes= [[1690363491.5916405, 1690363491.7000444], [1690363491.8699682, 1690363491.9283917], [1690363493.1077044, 1690363493.2521596], [1690363493.40094, 1690363493.4552891], [1690363493.6228998, 1690363493.7018487], [1690363494.2044394, 1690363494.3086836], [1690363494.5029054, 1690363494.610269], [1690363496.2147458, 1690363496.506228], [1690363496.7531693, 1690363496.8368077], [1690363498.281506, 1690363498.358732], [1690363498.6552818, 1690363498.7884731]]
# # SupTimes= [[1690363676.6875439, 1690363676.7940505], [1690363677.0543296, 1690363677.1594326], [1690363681.8293424, 1690363681.9803584], [1690363682.0835776, 1690363682.1882367], [1690363682.9788823, 1690363683.2364635], [1690363683.431042, 1690363683.538959], [1690363684.4833117, 1690363684.743343], [1690363684.8220618, 1690363684.932028], [1690363686.1181078, 1690363686.307396], [1690363686.4372342, 1690363686.5392191], [1690363688.3637123, 1690363688.967824], [1690363690.7600121, 1690363691.092385]]
# SupTimes= [[1690364049.1682422, 1690364049.1952076], [1690364049.2080438, 1690364049.236177], [1690364049.2498713, 1690364049.3618205], [1690364049.373917, 1690364049.4223464], [1690364049.5307617, 1690364049.632968], [1690364049.648892, 1690364049.6805573], [1690364049.7425647, 1690364049.7706902], [1690364049.7865884, 1690364049.8258815], [1690364049.9044008, 1690364049.9310234], [1690364049.9495096, 1690364049.975127], [1690364050.035017, 1690364050.1638381], [1690364050.1772194, 1690364050.2030828], [1690364050.2719147, 1690364050.297324], [1690364050.3152418, 1690364050.3819935]]

# b = []
# for aa in SupTimes:
# 	b.append(aa[1]- aa[0])


# print(b, sum(b))

# SupTimes= [[1690362939.3756063, 1690362939.4415596], [1690362939.4562871, 1690362939.5241911], [1690362939.5532982, 1690362939.6217291], [1690362939.6315925, 1690362939.6990972], [1690362939.7246573, 1690362939.7934198], [1690362939.8173525, 1690362939.8938432], [1690362939.9008615, 1690362939.9699585], [1690362939.9929395, 1690362940.0707808], [1690362940.097722, 1690362940.1627111], [1690362940.1700299, 1690362940.242017]]
# # SupTimes= [[1690363553.735773, 1690363553.74978], [1690363553.8142357, 1690363553.8290455], [1690363553.9052284, 1690363553.921544], [1690363553.9801629, 1690363553.9960518], [1690363554.0724647, 1690363554.0877109], [1690363554.1612732, 1690363554.1766117], [1690363554.233968, 1690363554.2452054], [1690363554.3200448, 1690363554.4585588], [1690363554.535798, 1690363554.5508718], [1690363554.6102586, 1690363554.6236596]]
# b = []
# for aa in SupTimes:
# 	b.append(aa[1]- aa[0])


# print(b, sum(b))

load= 3.4882612228393555 
encoder= 11.066519260406494 
decoder= 5.1370460987091064 

# load= 1.5292994976043701
# encoder= 7.982628583908081
# decoder= 1.7296104431152344

lenD = sum(decoderLenTs)/len(decoderLenTs)
min = min(decoderLenTs)
max = max(decoderLenTs)
print(encoder+lenD*decoder, "[", (encoder+min*decoder), "~", encoder+max*decoder, "]")
print(decoder - load)
